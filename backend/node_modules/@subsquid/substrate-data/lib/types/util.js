"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.assertStorage = exports.assertCall = exports.assertEvent = exports.UnexpectedStorageType = exports.UnexpectedCallType = exports.UnexpectedEventType = exports.isCall = exports.isEvent = void 0;
function isEvent(runtime, ty, event) {
    return runtime.checkEventType(event.name, ty);
}
exports.isEvent = isEvent;
function isCall(runtime, ty, call) {
    return runtime.checkCallType(call.name, ty);
}
exports.isCall = isCall;
class UnexpectedEventType extends Error {
    constructor(name) {
        super(`${name} event has unexpected type`);
    }
}
exports.UnexpectedEventType = UnexpectedEventType;
class UnexpectedCallType extends Error {
    constructor(name) {
        super(`${name} call has unexpected type`);
    }
}
exports.UnexpectedCallType = UnexpectedCallType;
class UnexpectedStorageType extends Error {
    constructor(name) {
        super(`${name} storage has unexpected type`);
    }
}
exports.UnexpectedStorageType = UnexpectedStorageType;
function assertEvent(runtime, ty, event) {
    if (!runtime.checkEventType(event.name, ty))
        throw new UnexpectedEventType(event.name);
}
exports.assertEvent = assertEvent;
function assertCall(runtime, ty, event) {
    if (!runtime.checkCallType(event.name, ty))
        throw new UnexpectedCallType(event.name);
}
exports.assertCall = assertCall;
function assertStorage(runtime, name, allowedModifiers, key, value) {
    if (!runtime.checkStorageType(name, allowedModifiers, key, value))
        throw new UnexpectedStorageType(name);
}
exports.assertStorage = assertStorage;
//# sourceMappingURL=util.js.map