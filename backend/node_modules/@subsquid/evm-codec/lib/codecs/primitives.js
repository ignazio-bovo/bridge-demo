"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.fixedSizeArray = exports.address = exports.bytes32 = exports.bytes31 = exports.bytes30 = exports.bytes29 = exports.bytes28 = exports.bytes27 = exports.bytes26 = exports.bytes25 = exports.bytes24 = exports.bytes23 = exports.bytes22 = exports.bytes21 = exports.bytes20 = exports.bytes19 = exports.bytes18 = exports.bytes17 = exports.bytes16 = exports.bytes15 = exports.bytes14 = exports.bytes13 = exports.bytes12 = exports.bytes11 = exports.bytes10 = exports.bytes9 = exports.bytes8 = exports.bytes7 = exports.bytes6 = exports.bytes5 = exports.bytes4 = exports.bytes3 = exports.bytes2 = exports.bytes1 = exports.bytes0 = exports.bytes = exports.string = exports.int256 = exports.uint256 = exports.int128 = exports.uint128 = exports.int64 = exports.uint64 = exports.int32 = exports.uint32 = exports.int16 = exports.uint16 = exports.int8 = exports.uint8 = exports.bool = void 0;
exports.uint232 = exports.int224 = exports.uint224 = exports.int216 = exports.uint216 = exports.int208 = exports.uint208 = exports.int200 = exports.uint200 = exports.int192 = exports.uint192 = exports.int184 = exports.uint184 = exports.int176 = exports.uint176 = exports.int168 = exports.uint168 = exports.int160 = exports.uint160 = exports.int152 = exports.uint152 = exports.int144 = exports.uint144 = exports.int136 = exports.uint136 = exports.int120 = exports.uint120 = exports.int112 = exports.uint112 = exports.int104 = exports.uint104 = exports.int96 = exports.uint96 = exports.int88 = exports.uint88 = exports.int80 = exports.uint80 = exports.int72 = exports.uint72 = exports.int56 = exports.uint56 = exports.int48 = exports.uint48 = exports.int40 = exports.uint40 = exports.int24 = exports.uint24 = exports.tuple = exports.struct = exports.array = void 0;
exports.int248 = exports.uint248 = exports.int240 = exports.uint240 = exports.int232 = void 0;
const util_internal_hex_1 = require("@subsquid/util-internal-hex");
const array_1 = require("./array");
const struct_1 = require("./struct");
const safeToNumber_1 = require("../safeToNumber");
exports.bool = {
    encode: function (sink, val) {
        sink.bool(val);
    },
    decode(src) {
        return src.bool();
    },
    isDynamic: false,
    baseType: 'bool',
};
exports.uint8 = {
    encode(sink, val) {
        sink.u8((0, safeToNumber_1.safeToNumber)(val));
    },
    decode(src) {
        return src.u8();
    },
    isDynamic: false,
    baseType: 'int',
};
exports.int8 = {
    encode(sink, val) {
        sink.i8((0, safeToNumber_1.safeToNumber)(val));
    },
    decode(src) {
        return src.i8();
    },
    isDynamic: false,
    baseType: 'int',
};
exports.uint16 = {
    encode(sink, val) {
        sink.u16((0, safeToNumber_1.safeToNumber)(val));
    },
    decode(src) {
        return src.u16();
    },
    isDynamic: false,
    baseType: 'int',
};
exports.int16 = {
    encode(sink, val) {
        sink.i16((0, safeToNumber_1.safeToNumber)(val));
    },
    decode(src) {
        return src.i16();
    },
    isDynamic: false,
    baseType: 'int',
};
exports.uint32 = {
    encode(sink, val) {
        sink.u32((0, safeToNumber_1.safeToNumber)(val));
    },
    decode(src) {
        return src.u32();
    },
    isDynamic: false,
    baseType: 'int',
};
exports.int32 = {
    encode(sink, val) {
        sink.i32((0, safeToNumber_1.safeToNumber)(val));
    },
    decode(src) {
        return src.i32();
    },
    isDynamic: false,
    baseType: 'int',
};
exports.uint64 = {
    encode(sink, val) {
        sink.u64(BigInt(val));
    },
    decode(src) {
        return src.u64();
    },
    isDynamic: false,
    baseType: 'int',
};
exports.int64 = {
    encode(sink, val) {
        sink.i64(BigInt(val));
    },
    decode(src) {
        return src.i64();
    },
    isDynamic: false,
    baseType: 'int',
};
exports.uint128 = {
    encode(sink, val) {
        sink.u128(BigInt(val));
    },
    decode(src) {
        return src.u128();
    },
    isDynamic: false,
    baseType: 'int',
};
exports.int128 = {
    encode(sink, val) {
        sink.i128(BigInt(val));
    },
    decode(src) {
        return src.i128();
    },
    isDynamic: false,
    baseType: 'int',
};
exports.uint256 = {
    encode(sink, val) {
        sink.u256(BigInt(val));
    },
    decode(src) {
        return src.u256();
    },
    isDynamic: false,
    baseType: 'int',
};
exports.int256 = {
    encode(sink, val) {
        sink.i256(BigInt(val));
    },
    decode(src) {
        return src.i256();
    },
    isDynamic: false,
    baseType: 'int',
};
exports.string = {
    encode(sink, val) {
        sink.newStaticDataArea();
        sink.string(val);
        sink.endCurrentDataArea();
    },
    decode(src) {
        return src.string();
    },
    isDynamic: true,
    baseType: 'string',
};
function toBuffer(val) {
    if (val instanceof Uint8Array) {
        return val;
    }
    if (!(0, util_internal_hex_1.isHex)(val)) {
        throw new Error(`Expected hex string or buffer, got: ${val}`);
    }
    return (0, util_internal_hex_1.decodeHex)(val);
}
exports.bytes = {
    encode(sink, val) {
        sink.newStaticDataArea();
        sink.bytes(toBuffer(val));
        sink.endCurrentDataArea();
    },
    decode(src) {
        return (0, util_internal_hex_1.toHex)(src.bytes());
    },
    isDynamic: true,
    baseType: 'bytes',
};
const bytesN = (size) => ({
    encode(sink, val) {
        sink.staticBytes(size, toBuffer(val));
    },
    decode(src) {
        return (0, util_internal_hex_1.toHex)(src.staticBytes(size));
    },
    isDynamic: false,
    baseType: 'bytes',
});
exports.bytes0 = bytesN(0);
exports.bytes1 = bytesN(1);
exports.bytes2 = bytesN(2);
exports.bytes3 = bytesN(3);
exports.bytes4 = bytesN(4);
exports.bytes5 = bytesN(5);
exports.bytes6 = bytesN(6);
exports.bytes7 = bytesN(7);
exports.bytes8 = bytesN(8);
exports.bytes9 = bytesN(9);
exports.bytes10 = bytesN(10);
exports.bytes11 = bytesN(11);
exports.bytes12 = bytesN(12);
exports.bytes13 = bytesN(13);
exports.bytes14 = bytesN(14);
exports.bytes15 = bytesN(15);
exports.bytes16 = bytesN(16);
exports.bytes17 = bytesN(17);
exports.bytes18 = bytesN(18);
exports.bytes19 = bytesN(19);
exports.bytes20 = bytesN(20);
exports.bytes21 = bytesN(21);
exports.bytes22 = bytesN(22);
exports.bytes23 = bytesN(23);
exports.bytes24 = bytesN(24);
exports.bytes25 = bytesN(25);
exports.bytes26 = bytesN(26);
exports.bytes27 = bytesN(27);
exports.bytes28 = bytesN(28);
exports.bytes29 = bytesN(29);
exports.bytes30 = bytesN(30);
exports.bytes31 = bytesN(31);
exports.bytes32 = bytesN(32);
exports.address = {
    encode(sink, val) {
        sink.address(val);
    },
    decode(src) {
        return src.address();
    },
    isDynamic: false,
    baseType: 'address',
};
const fixedSizeArray = (item, size) => new array_1.FixedSizeArrayCodec(item, size);
exports.fixedSizeArray = fixedSizeArray;
const array = (item) => new array_1.ArrayCodec(item);
exports.array = array;
const struct = (components) => new struct_1.StructCodec(components);
exports.struct = struct;
exports.tuple = exports.struct;
exports.uint24 = exports.uint32;
exports.int24 = exports.int32;
exports.uint40 = exports.uint64;
exports.int40 = exports.int64;
exports.uint48 = exports.uint64;
exports.int48 = exports.int64;
exports.uint56 = exports.uint64;
exports.int56 = exports.int64;
exports.uint72 = exports.uint128;
exports.int72 = exports.int128;
exports.uint80 = exports.uint128;
exports.int80 = exports.int128;
exports.uint88 = exports.uint128;
exports.int88 = exports.int128;
exports.uint96 = exports.uint128;
exports.int96 = exports.int128;
exports.uint104 = exports.uint128;
exports.int104 = exports.int128;
exports.uint112 = exports.uint128;
exports.int112 = exports.int128;
exports.uint120 = exports.uint128;
exports.int120 = exports.int128;
exports.uint136 = exports.uint256;
exports.int136 = exports.int256;
exports.uint144 = exports.uint256;
exports.int144 = exports.int256;
exports.uint152 = exports.uint256;
exports.int152 = exports.int256;
exports.uint160 = exports.uint256;
exports.int160 = exports.int256;
exports.uint168 = exports.uint256;
exports.int168 = exports.int256;
exports.uint176 = exports.uint256;
exports.int176 = exports.int256;
exports.uint184 = exports.uint256;
exports.int184 = exports.int256;
exports.uint192 = exports.uint256;
exports.int192 = exports.int256;
exports.uint200 = exports.uint256;
exports.int200 = exports.int256;
exports.uint208 = exports.uint256;
exports.int208 = exports.int256;
exports.uint216 = exports.uint256;
exports.int216 = exports.int256;
exports.uint224 = exports.uint256;
exports.int224 = exports.int256;
exports.uint232 = exports.uint256;
exports.int232 = exports.int256;
exports.uint240 = exports.uint256;
exports.int240 = exports.int256;
exports.uint248 = exports.uint256;
exports.int248 = exports.int256;
//# sourceMappingURL=primitives.js.map