import { Codec } from '../codec';
import { Sink } from '../sink';
import { Src } from '../src';
import { StructCodec } from './struct';
type Numberish = number | bigint;
export declare const bool: Codec<boolean>;
export declare const uint8: Codec<Numberish, number>;
export declare const int8: Codec<Numberish, number>;
export declare const uint16: Codec<Numberish, number>;
export declare const int16: Codec<Numberish, number>;
export declare const uint32: Codec<Numberish, number>;
export declare const int32: Codec<Numberish, number>;
export declare const uint64: Codec<Numberish, bigint>;
export declare const int64: Codec<Numberish, bigint>;
export declare const uint128: Codec<Numberish, bigint>;
export declare const int128: Codec<Numberish, bigint>;
export declare const uint256: Codec<Numberish, bigint>;
export declare const int256: Codec<Numberish, bigint>;
export declare const string: {
    readonly encode: (sink: Sink, val: string) => void;
    readonly decode: (src: Src) => string;
    readonly isDynamic: true;
    readonly baseType: "string";
};
export declare const bytes: Codec<Uint8Array | string, string>;
export declare const bytes0: Codec<string | Uint8Array, string>;
export declare const bytes1: Codec<string | Uint8Array, string>;
export declare const bytes2: Codec<string | Uint8Array, string>;
export declare const bytes3: Codec<string | Uint8Array, string>;
export declare const bytes4: Codec<string | Uint8Array, string>;
export declare const bytes5: Codec<string | Uint8Array, string>;
export declare const bytes6: Codec<string | Uint8Array, string>;
export declare const bytes7: Codec<string | Uint8Array, string>;
export declare const bytes8: Codec<string | Uint8Array, string>;
export declare const bytes9: Codec<string | Uint8Array, string>;
export declare const bytes10: Codec<string | Uint8Array, string>;
export declare const bytes11: Codec<string | Uint8Array, string>;
export declare const bytes12: Codec<string | Uint8Array, string>;
export declare const bytes13: Codec<string | Uint8Array, string>;
export declare const bytes14: Codec<string | Uint8Array, string>;
export declare const bytes15: Codec<string | Uint8Array, string>;
export declare const bytes16: Codec<string | Uint8Array, string>;
export declare const bytes17: Codec<string | Uint8Array, string>;
export declare const bytes18: Codec<string | Uint8Array, string>;
export declare const bytes19: Codec<string | Uint8Array, string>;
export declare const bytes20: Codec<string | Uint8Array, string>;
export declare const bytes21: Codec<string | Uint8Array, string>;
export declare const bytes22: Codec<string | Uint8Array, string>;
export declare const bytes23: Codec<string | Uint8Array, string>;
export declare const bytes24: Codec<string | Uint8Array, string>;
export declare const bytes25: Codec<string | Uint8Array, string>;
export declare const bytes26: Codec<string | Uint8Array, string>;
export declare const bytes27: Codec<string | Uint8Array, string>;
export declare const bytes28: Codec<string | Uint8Array, string>;
export declare const bytes29: Codec<string | Uint8Array, string>;
export declare const bytes30: Codec<string | Uint8Array, string>;
export declare const bytes31: Codec<string | Uint8Array, string>;
export declare const bytes32: Codec<string | Uint8Array, string>;
export declare const address: Codec<string>;
export declare const fixedSizeArray: <TIn, TOut>(item: Codec<TIn, TOut>, size: number) => Codec<TIn[], TOut[]>;
export declare const array: <TIn, TOut>(item: Codec<TIn, TOut>) => Codec<TIn[], TOut[]>;
type Struct = {
    [key: string]: Codec<any>;
};
export declare const struct: <const T extends Struct>(components: T) => StructCodec<T>;
export declare const tuple: <const T extends Struct>(components: T) => StructCodec<T>;
export declare const uint24: Codec<Numberish, number>;
export declare const int24: Codec<Numberish, number>;
export declare const uint40: Codec<Numberish, bigint>;
export declare const int40: Codec<Numberish, bigint>;
export declare const uint48: Codec<Numberish, bigint>;
export declare const int48: Codec<Numberish, bigint>;
export declare const uint56: Codec<Numberish, bigint>;
export declare const int56: Codec<Numberish, bigint>;
export declare const uint72: Codec<Numberish, bigint>;
export declare const int72: Codec<Numberish, bigint>;
export declare const uint80: Codec<Numberish, bigint>;
export declare const int80: Codec<Numberish, bigint>;
export declare const uint88: Codec<Numberish, bigint>;
export declare const int88: Codec<Numberish, bigint>;
export declare const uint96: Codec<Numberish, bigint>;
export declare const int96: Codec<Numberish, bigint>;
export declare const uint104: Codec<Numberish, bigint>;
export declare const int104: Codec<Numberish, bigint>;
export declare const uint112: Codec<Numberish, bigint>;
export declare const int112: Codec<Numberish, bigint>;
export declare const uint120: Codec<Numberish, bigint>;
export declare const int120: Codec<Numberish, bigint>;
export declare const uint136: Codec<Numberish, bigint>;
export declare const int136: Codec<Numberish, bigint>;
export declare const uint144: Codec<Numberish, bigint>;
export declare const int144: Codec<Numberish, bigint>;
export declare const uint152: Codec<Numberish, bigint>;
export declare const int152: Codec<Numberish, bigint>;
export declare const uint160: Codec<Numberish, bigint>;
export declare const int160: Codec<Numberish, bigint>;
export declare const uint168: Codec<Numberish, bigint>;
export declare const int168: Codec<Numberish, bigint>;
export declare const uint176: Codec<Numberish, bigint>;
export declare const int176: Codec<Numberish, bigint>;
export declare const uint184: Codec<Numberish, bigint>;
export declare const int184: Codec<Numberish, bigint>;
export declare const uint192: Codec<Numberish, bigint>;
export declare const int192: Codec<Numberish, bigint>;
export declare const uint200: Codec<Numberish, bigint>;
export declare const int200: Codec<Numberish, bigint>;
export declare const uint208: Codec<Numberish, bigint>;
export declare const int208: Codec<Numberish, bigint>;
export declare const uint216: Codec<Numberish, bigint>;
export declare const int216: Codec<Numberish, bigint>;
export declare const uint224: Codec<Numberish, bigint>;
export declare const int224: Codec<Numberish, bigint>;
export declare const uint232: Codec<Numberish, bigint>;
export declare const int232: Codec<Numberish, bigint>;
export declare const uint240: Codec<Numberish, bigint>;
export declare const int240: Codec<Numberish, bigint>;
export declare const uint248: Codec<Numberish, bigint>;
export declare const int248: Codec<Numberish, bigint>;
export {};
//# sourceMappingURL=primitives.d.ts.map